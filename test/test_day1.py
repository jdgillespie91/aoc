from aoc.day1 import main


def test_examples():
    assert (3, 0) == main(1122)
    assert (4, 4) == main(1111)
    assert (0, 0) == main(1234)
    assert (9, 6) == main(91212129)
    assert (0, 6) == main(1212)
    assert (3, 0) == main(1221)
    assert (0, 4) == main(123425)
    assert (0, 12) == main(123123)
    assert (0, 4) == main(12131415)


def test_puzzle():
    assert (1119, 1420) == main(int(
        '217523428149337669381721216749768791113624176532615223578558168936564624491683773'
        '592852448184897238699878612479122897295792966916847611435449569915839422152365689'
        '618758517558549779461471787464646752276991499252272271375574797699485697888843993'
        '798211113825367226995757594744732739397563489927146679635961897657347431694895991'
        '257714433481933835661598435935411347493925698654815783598258443944541732198579193'
        '493414421482822296895415611693416222223546513973429286784964786713393839237698564'
        '257952113236733897231819679339338327115458856539528618792315379762925178663548129'
        '431927282632695247356984233366737351589938535561488338613279592622547566478277391'
        '452835777934815267681569211384283189393618597217785562645196434358718357448592431'
        '672278895627387129536511283176246739852135258975223782591786254167221521557286159'
        '365873695152549368286685648572832264398812668719459987964884722491825388833541865'
        '739251831526638626839954496716632857753974538762627225674524359147773635228175947'
        '419466389865717936558894664198959969241229157772244994814968373431941491237353552'
        '681519417128712458635538369533498878319497888698529291478494892653258439346699993'
        '918462863192686867893725139765222825875268661481663372159614935362628515122187941'
        '392723612928115298881611987992979668933665531153536392982567888193852724711872135'
        '791855235213416511179476767853411462354414114418132425148132278218438194246199749'
        '798868716466219188652745745389517615678558456812723646461385847163335998438351673'
        '735252485475424429425831226245344944425162596169732358584691311597731673349536586'
        '732715997489429569819546994445286896288486944468188254654851228697428397114711298'
        '626321286357796583657563628636271359836176133328497563719863769671175492515662819'
        '929645739296555893138719765567848492319165138315382548123471162539498186335271851'
        '742215652797757667422626877131141143448435349588333726341821768663154415838871777'
        '592225988537351141918742777114346538548168415892299141646813644974293244631936693'
        '378274676617738335178417637111563761476647491752672125623215677285757658448932327'
        '189714712898411716428689488521368186617412381786768573815831555477552198371161259'
        '95361896562498721571413742'
    ))
